import csv
import os
import ast
from pathlib import Path

# Define the paths for the train and test folders
train_path = Path('data/train')
test_path = Path('data/test')

# Create the train and test directories, and the label directories within them
for path in [train_path, test_path]:
    path.mkdir(parents=True, exist_ok=True)
    for i in range(1, 6):
        (path / f'{i} star').mkdir(exist_ok=True)

# Function to save content to a file
def save_to_file(folder, label, content, idx):
    folder_path = folder / f'{label} star'
    file_path = folder_path / f'document_{idx}.txt'
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)

# Read the CSV file
with open('/content/mini_amazon_sentimental/encoded_test_dataset.csv', mode='r', newline='', encoding='utf-8') as file:
    reader = csv.DictReader(file)
    data = []
    for row in reader:
        label_dict = ast.literal_eval(row['label'])
        label = label_dict['label']
        content = row['content']
        data.append((label, content))

# Shuffle data for random train/test split
import random
random.shuffle(data)

# Define split ratio
split_ratio = 0.8
split_index = int(len(data) * split_ratio)

# Split the data into train and test sets
train_data = data[:split_index]
test_data = data[split_index:]

# Save the train data
for idx, (label, content) in enumerate(train_data):
    label_num = label.split()[0]  # Extract the numeric part of the label
    save_to_file(train_path, label_num, content, idx)

# Save the test data
for idx, (label, content) in enumerate(test_data):
    label_num = label.split()[0]  # Extract the numeric part of the label
    save_to_file(test_path, label_num, content, idx)
